{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "PyTestEmbed Injection",
  "scopeName": "pytestembed.injection",
  "injectionSelector": "L:source.python",
  "patterns": [
    {
      "name": "meta.test-block.pytestembed",
      "begin": "^(\\s*)(test)(:)\\s*",
      "end": "^(?=\\1(?:def\\s|class\\s|@|\\S))",
      "beginCaptures": {
        "1": {
          "name": "meta.indent.pytestembed"
        },
        "2": {
          "name": "keyword.control.test.pytestembed"
        },
        "3": {
          "name": "punctuation.separator.colon.pytestembed"
        }
      },
      "contentName": "source.python.embedded.pytestembed",
      "patterns": [
        {
          "include": "source.python"
        }
      ]
    },
    {
      "name": "meta.doc-block.pytestembed",
      "begin": "^(\\s*)(doc)(:)\\s*",
      "end": "^(?=\\1(?:def\\s|class\\s|@|\\S))",
      "beginCaptures": {
        "1": {
          "name": "meta.indent.pytestembed"
        },
        "2": {
          "name": "keyword.control.doc.pytestembed"
        },
        "3": {
          "name": "punctuation.separator.colon.pytestembed"
        }
      },
      "contentName": "comment.block.pytestembed.doc",
      "patterns": [
        {
          "include": "#doc-content"
        }
      ]
    }
  ],
  "repository": {
    "doc-content": {
      "patterns": [
        {
          "name": "markup.heading.doc-section.pytestembed",
          "match": "^\\s*(Args|Arguments|Parameters|Param|Returns?|Return|Yields?|Yield|Raises?|Raise|Examples?|Example|Note|Notes|See Also|References?)\\s*:\\s*$"
        },
        {
          "name": "markup.list.doc-parameter.pytestembed",
          "match": "^\\s*(\\w+)\\s*(\\([^)]+\\))?\\s*:\\s*(.*)$",
          "captures": {
            "1": {
              "name": "variable.parameter.doc.pytestembed"
            },
            "2": {
              "name": "storage.type.doc.pytestembed"
            },
            "3": {
              "name": "string.unquoted.doc-description.pytestembed"
            }
          }
        },
        {
          "name": "markup.raw.code.pytestembed",
          "begin": "^\\s*(>>>)\\s*",
          "end": "$",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.prompt.pytestembed"
            }
          },
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        },
        {
          "name": "comment.block.documentation.pytestembed",
          "match": "^\\s*(.+)$",
          "captures": {
            "1": {
              "name": "string.unquoted.doc.pytestembed"
            }
          }
        }
      ]
    }
  }
}
